//
// TransferenciasAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class TransferenciasAPI: APIBase {
    /**
     Cadastro de beneficiário para Transferencia
     
     - parameter beneficiario: (body) Objeto de requisição 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func transferenciasCadastrosPost(beneficiario: TransferenciaCadastroBenificiario, completion: @escaping ((_ error: Error?) -> Void)) {
        transferenciasCadastrosPostWithRequestBuilder(beneficiario: beneficiario).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Cadastro de beneficiário para Transferencia
     - POST /transferencias/cadastros
     - <p>Permite o cadastro de beneficiário para uma transferencia.</p>
     
     - parameter beneficiario: (body) Objeto de requisição 

     - returns: RequestBuilder<Void> 
     */
    open class func transferenciasCadastrosPostWithRequestBuilder(beneficiario: TransferenciaCadastroBenificiario) -> RequestBuilder<Void> {
        let path = "/transferencias/cadastros"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = beneficiario.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Transferência de valores entre contas
     
     - parameter transferencia: (body) Objeto de requisição 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func transferenciasPost(transferencia: Transferencia, completion: @escaping ((_ error: Error?) -> Void)) {
        transferenciasPostWithRequestBuilder(transferencia: transferencia).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Transferência de valores entre contas
     - POST /transferencias
     - <p>Permite a transferência de valor entre dois cartões pré cadastrados.</p>
     
     - parameter transferencia: (body) Objeto de requisição 

     - returns: RequestBuilder<Void> 
     */
    open class func transferenciasPostWithRequestBuilder(transferencia: Transferencia) -> RequestBuilder<Void> {
        let path = "/transferencias"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = transferencia.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
