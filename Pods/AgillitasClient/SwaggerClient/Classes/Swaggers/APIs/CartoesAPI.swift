//
// CartoesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class CartoesAPI: APIBase {
    /**
     Consulta o extrato do cartão
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter dataInicial: (query) Data inicial para a consulta (YYYY-MM-DD). 
     - parameter dataFinal: (query) Data final para a consulta (YYYY-MM-DD).. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cartoesIdCartaoExtratoGet(idCartao: String, dataInicial: Date, dataFinal: Date, completion: @escaping ((_ data: ExtratoResponse?,_ error: Error?) -> Void)) {
        cartoesIdCartaoExtratoGetWithRequestBuilder(idCartao: idCartao, dataInicial: dataInicial, dataFinal: dataFinal).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Consulta o extrato do cartão
     - GET /cartoes/{idCartao}/extrato
     - <p>Permite a consulta dos movimentos por período de um determinado cartão. A janela máxima de observação é de 30 dias, e as datas inicial e final de observação pode ser configuradas, conforme necessidade.</p>
     - examples: [{contentType=application/json, example={
  "extrato" : [ {
    "tipo" : "CARGA",
    "estabelecimento" : "Super Mercado do João",
    "valor" : 100.1,
    "dataHora" : "12/12/2012 12:12:12"
  } ]
}}]
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter dataInicial: (query) Data inicial para a consulta (YYYY-MM-DD). 
     - parameter dataFinal: (query) Data final para a consulta (YYYY-MM-DD).. 

     - returns: RequestBuilder<ExtratoResponse> 
     */
    open class func cartoesIdCartaoExtratoGetWithRequestBuilder(idCartao: String, dataInicial: Date, dataFinal: Date) -> RequestBuilder<ExtratoResponse> {
        var path = "/cartoes/{idCartao}/extrato"
        path = path.replacingOccurrences(of: "{idCartao}", with: "\(idCartao)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "dataInicial": dataInicial.encodeToJSON(),
            "dataFinal": dataFinal.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ExtratoResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Consuta informações do portador do cartão
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cartoesIdCartaoPortadorGet(idCartao: String, completion: @escaping ((_ data: PortadorResponse?,_ error: Error?) -> Void)) {
        cartoesIdCartaoPortadorGetWithRequestBuilder(idCartao: idCartao).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Consuta informações do portador do cartão
     - GET /cartoes/{idCartao}/portador
     - <p>Permite a consulta de informações cadastrais de um determinado portador de cartão.</p>
     - examples: [{contentType=application/json, example={
  "portador" : {
    "endereco" : {
      "cidade" : "Pinheiros",
      "estado" : "SP",
      "codigoPostal" : "05425070",
      "logradouro" : "Av. das Nações Unidas"
    },
    "celular" : "1.1998767654E10",
    "nome" : "João da Silva",
    "email" : "joao.siva@mail.com"
  }
}}]
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 

     - returns: RequestBuilder<PortadorResponse> 
     */
    open class func cartoesIdCartaoPortadorGetWithRequestBuilder(idCartao: String) -> RequestBuilder<PortadorResponse> {
        var path = "/cartoes/{idCartao}/portador"
        path = path.replacingOccurrences(of: "{idCartao}", with: "\(idCartao)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PortadorResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Consulta o saldo do cartão
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cartoesIdCartaoSaldoGet(idCartao: String, completion: @escaping ((_ data: Saldo?,_ error: Error?) -> Void)) {
        cartoesIdCartaoSaldoGetWithRequestBuilder(idCartao: idCartao).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Consulta o saldo do cartão
     - GET /cartoes/{idCartao}/saldo
     - <p>Permite a consulta do saldo disponível de um determinado cartão.</p>
     - examples: [{contentType=application/json, example={
  "saldo" : {
    "valor" : 10.1
  }
}}]
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 

     - returns: RequestBuilder<Saldo> 
     */
    open class func cartoesIdCartaoSaldoGetWithRequestBuilder(idCartao: String) -> RequestBuilder<Saldo> {
        var path = "/cartoes/{idCartao}/saldo"
        path = path.replacingOccurrences(of: "{idCartao}", with: "\(idCartao)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Saldo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Credita ou debita valor da conta de um cartão.
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter saldo: (body) Objeto de requisição 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cartoesIdCartaoSaldoPut(idCartao: String, saldo: SetSaldo, completion: @escaping ((_ error: Error?) -> Void)) {
        cartoesIdCartaoSaldoPutWithRequestBuilder(idCartao: idCartao, saldo: saldo).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Credita ou debita valor da conta de um cartão.
     - PUT /cartoes/{idCartao}/saldo
     - <p>Permite creditar ou debitar um valor especifico em um determinado cartão.</p><br/><p class='obs obs-danger'>Este recurso deve ser utilizado somente pelo reseller e quando o credito do cartão for de responsabilidade e propriedade do Reseller.</p>
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter saldo: (body) Objeto de requisição 

     - returns: RequestBuilder<Void> 
     */
    open class func cartoesIdCartaoSaldoPutWithRequestBuilder(idCartao: String, saldo: SetSaldo) -> RequestBuilder<Void> {
        var path = "/cartoes/{idCartao}/saldo"
        path = path.replacingOccurrences(of: "{idCartao}", with: "\(idCartao)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = saldo.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Consulta o status do cartão
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cartoesIdCartaoStatusGet(idCartao: String, completion: @escaping ((_ data: StatusCartaoResponse?,_ error: Error?) -> Void)) {
        cartoesIdCartaoStatusGetWithRequestBuilder(idCartao: idCartao).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Consulta o status do cartão
     - GET /cartoes/{idCartao}/status
     - <p>Permite a consulta do status de um determinado cartão. O status do cartão nos permite saber se o cartão esta ativo, bloqueado, desbloqueado ou cancelado.</p>
     - examples: [{contentType=application/json, example={
  "status" : "bloqueado"
}}]
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 

     - returns: RequestBuilder<StatusCartaoResponse> 
     */
    open class func cartoesIdCartaoStatusGetWithRequestBuilder(idCartao: String) -> RequestBuilder<StatusCartaoResponse> {
        var path = "/cartoes/{idCartao}/status"
        path = path.replacingOccurrences(of: "{idCartao}", with: "\(idCartao)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<StatusCartaoResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Altera status do cartão
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter status: (body) Objeto de requisição 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cartoesIdCartaoStatusPut(idCartao: String, status: SetCardStatus, completion: @escaping ((_ error: Error?) -> Void)) {
        cartoesIdCartaoStatusPutWithRequestBuilder(idCartao: idCartao, status: status).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Altera status do cartão
     - PUT /cartoes/{idCartao}/status
     - <p>Permite o bloqueio e desbloqueio de um determinado cartão.</p>
     
     - parameter idCartao: (path) Número identificador referente ao proxy localizado no verso do cartão. 
     - parameter status: (body) Objeto de requisição 

     - returns: RequestBuilder<Void> 
     */
    open class func cartoesIdCartaoStatusPutWithRequestBuilder(idCartao: String, status: SetCardStatus) -> RequestBuilder<Void> {
        var path = "/cartoes/{idCartao}/status"
        path = path.replacingOccurrences(of: "{idCartao}", with: "\(idCartao)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = status.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Associa um número de proxy de cartão a um portador.
     
     - parameter cartao: (body) Objeto de requisição 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cartoesPost(cartao: SetNovoCartao, completion: @escaping ((_ error: Error?) -> Void)) {
        cartoesPostWithRequestBuilder(cartao: cartao).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Associa um número de proxy de cartão a um portador.
     - POST /cartoes
     - <p>Operação responsável por associar um número proxy de cartão a um portador.</p><br/> <p>Esse processo de liberação é assíncrono.</p> 
     
     - parameter cartao: (body) Objeto de requisição 

     - returns: RequestBuilder<Void> 
     */
    open class func cartoesPostWithRequestBuilder(cartao: SetNovoCartao) -> RequestBuilder<Void> {
        let path = "/cartoes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = cartao.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
